<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
        标签bean:管理组件对象的创建，完成IOC 控制反转
            属性class:指定对象的全限定名  id:指定spring管理该对象的唯一标识
    -->

    <bean class="init.UserDaoImpl" id="userDao"></bean>

    <!--==========================set方法注入=========================-->
    <bean class="init.UserServiceImpl" id="userService">
        <!--
            标签property：管理对象的属性赋值，完成对象与对象之间的调用联系，即完成DI 依赖注入
                属性name:给对象中的某个成员变量名赋值 ref:配置文件中对应的bean的id名
        -->
        <property name="userDao" ref="userDao"></property>
    </bean>


    <!--=========================构造函数注入==========================-->
    <bean class="init.ConstructorDI" id="constructorDI">
        <!--
        使用的标签:constructor-arg
        标签出现的位置：bean标签的内部
        标签中的属性
            type：用于指定要注入的数据的数据类型，该数据类型也是构造函数中某个或某些参数的类型
            index：用于指定要注入的数据给构造函数中指定索引位置的参数赋值。索引的位置是从0开始
            name：用于指定给构造函数中指定名称的参数赋值
            =============以上三个用于指定给构造函数中哪个参数赋值===============================
            value：用于提供基本类型和String类型的数据
            ref：用于指定其他的bean类型数据。

        -->
        <constructor-arg type="java.lang.String" index="0" name="name" value="xixi"></constructor-arg>
        <constructor-arg index="1" name="age" value="12" ></constructor-arg>
    </bean>

    <bean class="init.ConstructorDI" id="constructorDI1">
        <constructor-arg index="0" name="name" value="xixi"></constructor-arg>
        <constructor-arg index="1" name="age" value="12" ></constructor-arg>
        <constructor-arg index="2" name="userDao" ref="userDao" ></constructor-arg>
    </bean>


    <!--=========================自动注入：autowired==========================-->
        <!--
            使用的属性：autowire
            autowire=”byName”
            根据注入的属性名与配置文件中bean的id匹配,一致则注入,不一致报错
            autowire=”byType” d
            根据注入的属性类型,与配置文件中的类型匹配,类型一致注入(在多个实现类时,会产生歧义)
            注意: 无论使用以上那种方式注入都需要为属性提供set方法
        -->
    <bean class="init.UserServiceImpl" id="userService2" autowire="byName" ></bean>
</beans>